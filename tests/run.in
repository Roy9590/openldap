#!/bin/sh
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2005 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

USAGE="$0 [-b <backend>] [-c] [-k] [-p] [-u] [-w] <script>"

# configure generated
SRCDIR="@srcdir@"
TOPSRCDIR="@top_srcdir@"
LN_S="@LN_S@"

export SRCDIR TOPSRCDIR LN_S

# backends
AC_bdb=@BUILD_BDB@
AC_hdb=@BUILD_HDB@
AC_ldap=ldap@BUILD_LDAP@
AC_ldbm=@BUILD_LDBM@
AC_meta=meta@BUILD_META@
AC_monitor=@BUILD_MONITOR@
AC_relay=relay@BUILD_RELAY@
AC_sql=sql@BUILD_SQL@

# overlays
AC_glue=glue@BUILD_GLUE@
AC_pcache=pcache@BUILD_PROXYCACHE@
AC_ppolicy=ppolicy@BUILD_PPOLICY@
AC_refint=refint@BUILD_REFINT@
AC_translucent=translucent@BUILD_TRANSLUCENT@
AC_unique=unique@BUILD_UNIQUE@
AC_rwm=rwm@BUILD_RWM@
AC_syncprov=syncprov@BUILD_SYNCPROV@

# misc
AC_WITH_SASL=@WITH_SASL@
AC_WITH_TLS=@WITH_TLS@
AC_WITH_MODULES_ENABLED=@WITH_MODULES_ENABLED@

export AC_bdb AC_hdb AC_ldap AC_ldbm AC_meta AC_monitor AC_relay AC_sql 
export AC_glue AC_pcache AC_ppolicy AC_refint AC_unique AC_rwm AC_syncprov
export AC_translucent AC_WITH_SASL AC_WITH_TLS AC_WITH_MODULES_ENABLED

if test ! -x ../servers/slapd/slapd ; then
	echo "Could not locate slapd(8)"
	exit 1
fi

if test $AC_bdb != no ; then
	BACKEND=bdb
elif test $AC_ldbm != no ; then
	BACKEND=ldbm
elif test $AC_hdb != no ; then
	BACKEND=hdb
else
	echo "Not configured with a suitable database backend"
	exit 1
fi

CLEAN=no
WAIT=0
KILLSERVERS=yes
PRESERVE=${PRESERVE-no}
USERDATA=no

while test $# -gt 0 ; do
	case "$1" in
		-b | -backend)
			BACKEND="$2"
			shift; shift ;;

		-c | -clean)
			CLEAN=yes
			shift; shift ;;

		-k | -kill)
			KILLSERVERS=no
			shift ;;

		-p | -preserve)
			PRESERVE=yes
			shift ;;

		-u | -userdata)
			USERDATA=yes
			shift ;;

		-w | -wait)
			WAIT=1
			shift ;;

		-)
			shift
			break ;;

		-*)
			echo "$USAGE"; exit 1
			;;

		*)
			break ;;
	esac
done

BACKENDTYPE=`eval 'echo $AC_'$BACKEND`
if test "x$BACKENDTYPE" = "x" ; then
	BACKENDTYPE="unknown"
fi
export BACKEND BACKENDTYPE WAIT KILLSERVERS PRESERVE USERDATA

if test $# = 0 ; then
	echo "$USAGE"; exit 1
fi

SCRIPTDIR="${SRCDIR}/scripts"
SCRIPTNAME="$1"
shift

if test -x "${SCRIPTDIR}/${SCRIPTNAME}" ; then
	SCRIPT="${SCRIPTDIR}/${SCRIPTNAME}"
elif test -x "`echo ${SCRIPTDIR}/test*-${SCRIPTNAME}`"; then
	SCRIPT="`echo ${SCRIPTDIR}/test*-${SCRIPTNAME}`"
elif test -x "`echo ${SCRIPTDIR}/${SCRIPTNAME}-*`"; then
	SCRIPT="`echo ${SCRIPTDIR}/${SCRIPTNAME}-*`"
else
	echo "run: ${SCRIPTNAME} not found (or not executable)"
	exit 1;
fi

if test ! -r testdata/test.ldif ; then
	${LN_S} ${SRCDIR}/data testdata
fi
if test ! -r schema/core.schema ; then
	${LN_S} ${TOPSRCDIR}/servers/slapd/schema schema
fi

if test -d testrun ; then
	if test $PRESERVE = no ; then
		echo "Cleaning up test run directory leftover from previous run."
		/bin/rm -rf testrun
	elif test $PRESERVE = yes ; then
		echo "Cleaning up only database directories leftover from previous run."
		/bin/rm -rf testrun/db.*
	fi
fi

if test $USERDATA = yes ; then
	if test ! -d userdata ; then
		echo "User data directory (userdata) does not exist."
		exit 1
	fi
	mkdir -p testrun
	cp -R userdata/* testrun
fi

# disable LDAP initialization
LDAPNOINIT=true; export LDAPNOINIT

echo "Running ${SCRIPT}..."
$SCRIPT $*
RC=$?

if test $CLEAN = yes ; then
	echo "Cleaning up test run directory from this run."
	/bin/rm -rf testrun
	echo "Cleaning up symlinks."
	/bin/rm -f testdata schema
fi

exit $RC
