#! /bin/sh
# $OpenLDAP$
## This work is part of OpenLDAP Software <http://www.openldap.org/>.
##
## Copyright 1998-2005 The OpenLDAP Foundation.
## All rights reserved.
##
## Redistribution and use in source and binary forms, with or without
## modification, are permitted only as authorized by the OpenLDAP
## Public License.
##
## A copy of this license is available in the file LICENSE in the
## top-level directory of the distribution or, alternatively, at
## <http://www.OpenLDAP.org/license.html>.

echo "running defines.sh"
. $SRCDIR/scripts/defines.sh

if test $BACKLDAP = "ldapno" ; then 
	echo "LDAP backend not available, test skipped"
	exit 0
fi 

mkdir -p $TESTDIR $DBDIR1 $DBDIR2

echo "Running slapadd to build slapd database..."
. $CONFFILTER $BACKEND $MONITORDB < $CHAINCONF1 > $ADDCONF
. $CONFFILTER < $LDIFCHAIN1 > $SEARCHOUT
$SLAPADD -f $ADDCONF -l $SEARCHOUT
RC=$?
if test $RC != 0 ; then
	echo "slapadd 1 failed ($RC)!"
	exit $RC
fi

. $CONFFILTER $BACKEND $MONITORDB < $CHAINCONF2 > $ADDCONF
. $CONFFILTER < $LDIFCHAIN2 > $SEARCHOUT
$SLAPADD -f $ADDCONF -l $SEARCHOUT
RC=$?
if test $RC != 0 ; then
	echo "slapadd 2 failed ($RC)!"
	exit $RC
fi

echo "Starting first slapd on TCP/IP port $PORT1..."
. $CONFFILTER $BACKEND $MONITORDB < $CHAINCONF1 > $CONF1
$SLAPD -f $CONF1 -h $URI1 -d $LVL $TIMING > $LOG1 2>&1 &
PID1=$!
if test $WAIT != 0 ; then
    echo PID $PID1
    read foo
fi

echo "Starting second slapd on TCP/IP port $PORT2..."
. $CONFFILTER $BACKEND $MONITORDB < $CHAINCONF2 > $CONF2
$SLAPD -f $CONF2 -h $URI2 -d $LVL $TIMING > $LOG2 2>&1 &
PID2=$!
if test $WAIT != 0 ; then
    echo PID $PID2
    read foo
fi

KILLPIDS="$PID1 $PID2"

echo "Using ldapsearch to check that first slapd is running..."
for i in 0 1 2 3 4 5; do
	$LDAPSEARCH -s base -b "$MONITOR" -h $LOCALHOST -p $PORT1 \
		'objectclass=*' > /dev/null 2>&1
	RC=$?
	if test $RC = 0 ; then
		break
	fi
	echo "Waiting 5 seconds for slapd to start..."
	sleep 5
done

echo "Using ldapsearch to check that second slapd is running..."
for i in 0 1 2 3 4 5; do
	$LDAPSEARCH -s base -b "$MONITOR" -h $LOCALHOST -p $PORT2 \
		'objectclass=*' > /dev/null 2>&1
	RC=$?
	if test $RC = 0 ; then
		break
	fi
	echo "Waiting 5 seconds for slapd to start..."
	sleep 5
done

BASE="dc=example,dc=com"

for P in $PORT1 $PORT2 ; do
	echo "Testing ldapsearch as anonymous for \"$BASE\" on port $P..."
	$LDAPSEARCH -h $LOCALHOST -p $P -b "$BASE" -S "" \
		 > $SEARCHOUT 2>&1

	RC=$?
	if test $RC != 0 ; then
		echo "ldapsearch failed ($RC)!"
		test $KILLSERVERS != no && kill -HUP $KILLPIDS
		exit $RC
	fi

	echo "Filtering ldapsearch results..."
	. $LDIFFILTER < $SEARCHOUT > $SEARCHFLT
	echo "Filtering original ldif used to create database..."
	. $LDIFFILTER < $CHAINOUT > $LDIFFLT
	echo "Comparing filter output..."
	$CMP $SEARCHFLT $LDIFFLT > $CMPOUT
	
	if test $? != 0 ; then
		echo "comparison failed - chained search as anonymous didn't succeed"
		test $KILLSERVERS != no && kill -HUP $KILLPIDS
		exit 1
	fi
done

test $KILLSERVERS != no && kill -HUP $KILLPIDS

echo ">>>>> Test succeeded"
exit 0

